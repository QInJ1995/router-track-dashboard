{
  "compilerOptions": {
    "target": "esnext", // 指定 ECMAScript 目标版本。"esnext" 表示编译为最新的 ECMAScript 版本。
    "module": "esnext", // 指定模块代码生成方式。"esnext" 表示使用最新的 ECMAScript 模块系统。
    "moduleResolution": "node", // 决定 Node.js 解析模块的方式。"node" 表示使用 Node.js 的模块解析策略。
    "strict": true, // 启用所有严格类型检查选项。这有助于捕捉潜在的错误。
    "esModuleInterop": true, // 启用与 ES 模块的互操作性。这允许导入 CommonJS 模块时不需要使用三斜线指令。
    "allowSyntheticDefaultImports": true, // 允许从没有默认导出的模块导入默认导出
    "skipLibCheck": true, // 跳过所有 .d.ts 文件的类型检查。这可以加快编译速度。
    "declaration": true, // 生成相应的 .d.ts 文件。这有助于提供类型声明文件。
    "declarationDir": "./dist/types", // 指定生成的 .d.ts 文件的输出目录。这里设置为 ./dist/types。
    "sourceMap": true, // 生成相应的 .map 文件，用于调试。这可以帮助在调试时映射到源代码。
    "outDir": "./dist", // 指定编译后的文件输出目录。这里设置为 ./dist。
    "emitDeclarationOnly": true // 只生成声明文件，不输出 JavaScript 文件
  },
  "include": ["src/**/*"], // 指定要包含在编译中的文件或目录。这里设置为 src/**/*，表示包含 src 目录下的所有文件和子目录。
  "exclude": ["node_modules", "dist"] // 指定要从编译中排除的文件或目录。这里设置为 node_modules 和 dist，表示排除这两个目录。
}
